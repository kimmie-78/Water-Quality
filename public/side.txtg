function waterQualityApp() {
    return {
        data: {
            samples: [],
            chartData: null,
            highestLowest: null, // To store highest and lowest contaminants
            contaminants: [], // To store safe and unsafe contaminants
            selectedSample: null, // To store selected sample for editing
            isEditing: false, // To track if currently editing
            sideEffects: {
                sideEffects: "",
                remedy: ""
            },
        },
        showHistory: false, // To control the visibility of the history popup
        chart: null,
        lineChart: null,

        init() {
            this.showHistory = false;
            this.fetchData();
        },

        async fetchData() {
            const response = await fetch('/api/samples');
            const samples = await response.json();
            this.data.samples = samples;
            this.updateChartData();
            this.calculateHighestLowest();
            this.prepareContaminantsData();
            this.renderLineChart();
            this.getSideEffects();
            if (!response.ok) {
                console.error("Failed to fetch samples:", response.statusText);
                return;
            }
            
        },

        updateChartData() {
            const latestSample = this.data.samples[this.data.samples.length - 1];
            const contaminantKeys = Object.keys(latestSample).filter(key => key !== 'id' && key !== 'is_safe');

            const chartData = contaminantKeys.map(key => ({
                name: key,
                value: latestSample[key]
            }));

            this.data.chartData = {
                labels: chartData.map(data => data.name),
                datasets: [{
                    label: 'Contaminants',
                    data: chartData.map(data => data.value),
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']
                }]
            };

            this.renderChart();
        },

        calculateHighestLowest() {
            const latestSample = this.data.samples[this.data.samples.length - 1];
            const contaminantKeys = Object.keys(latestSample).filter(key => key !== 'id' && key !== 'is_safe');

            let highest = contaminantKeys[0];
            let lowest = contaminantKeys[0];

            contaminantKeys.forEach(key => {
                if (latestSample[key] > latestSample[highest]) {
                    highest = key;
                }
                if (latestSample[key] < latestSample[lowest]) {
                    lowest = key;
                }
            });

            this.data.highestLowest = {
                highest: { name: highest, value: latestSample[highest] },
                lowest: { name: lowest, value: latestSample[lowest] }
            };
        },

        prepareContaminantsData() {
            const latestSample = this.data.samples[this.data.samples.length - 1];
            const contaminantKeys = Object.keys(latestSample).filter(key => key !== 'id' && key !== 'is_safe');

            this.data.contaminants = contaminantKeys.map(key => ({
                name: key.charAt(0).toUpperCase() + key.slice(1),
                value: latestSample[key],
                isSafe: latestSample[key] <= this.getSafetyThreshold(key) // Assuming you have a method to get safety thresholds
            }));
        },

        getSafetyThreshold(contaminant) {
            // Define your safety thresholds here
            const safetyThresholds = {
                aluminium: 0.2,
                ammonia: 0.5,
                arsenic: 0.01,
                barium: 0.1,
                cadmium: 0.005,
                chloramine: 0.4,
                chromium: 0.05,
                copper: 1.3,
                fluoride: 4.0,
                bacteria: 0,
                viruses: 0,
                lead: 0.015,
                nitrates: 10,
                nitrites: 1,
                mercury: 0.002,
                perchlorate: 0.015,
                radium: 0.05,
                selenium: 0.05,
                silver: 0.1,
                uranium: 0.03
            };
            return safetyThresholds[contaminant] || Infinity; // Default to a high threshold if not defined
        },

        renderChart() {
            const ctx = document.getElementById('waterChart').getContext('2d');
            if (this.chart) {
                this.chart.destroy();
            }
            this.chart = new Chart(ctx, {
                type: 'pie',
                data: this.data.chartData,
                options: {
                    responsive: true,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    let label = context.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    label += context.raw + '%'; // Assuming percentage
                                    return label;
                                }
                            }
                        },
                        legend: {
                            position: 'top',
                        },
                    }
                }
            });
        },

        renderLineChart() {
            const latestSample = this.data.samples[this.data.samples.length - 1];
            const contaminantKeys = Object.keys(latestSample).filter(key => key !== 'id' && key !== 'is_safe');
            const values = contaminantKeys.map(key => latestSample[key]);

            const ctx = document.getElementById('lineChart').getContext('2d');
            if (this.lineChart) {
                this.lineChart.destroy();
            }

            this.lineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: contaminantKeys,
                    datasets: [{
                        label: 'Contaminant Values',
                        data: values,
                        borderColor: values.map(value => this.isSafe(value) ? 'green' : 'red'),
                        fill: false,
                        tension: 0.1,
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            suggestedMin: Math.min(...values),
                            suggestedMax: Math.max(...values)
                        }
                    },
                    responsive: true,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return context.dataset.label + ': ' + context.raw;
                                }
                            }
                        },
                        legend: {
                            display: false,
                        }
                    }
                }
            });
        },

        isSafe(value, contaminant) {
            const threshold = this.getSafetyThreshold(contaminant);
            return value <= threshold;
        },

        toggleHistory() {
            this.data.showHistory = !this.data.showHistory;
        },

        editSample(sample) {
            this.data.selectedSample = { ...sample }; // Clone the selected sample for editing
            this.data.isEditing = true; // Set editing state
        },

        async updateSample() {
            const response = await fetch(`/api/samples/${this.data.selectedSample.id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(this.data.selectedSample)
            });
            if (response.ok) {
                this.fetchData(); // Refresh data after updating
                this.data.isEditing = false; // Exit editing mode
                this.data.selectedSample = null; // Clear selected sample
            }
            if (!response.ok) {
                console.error("Failed to fetch samples:", response.statusText);
                return;
            }
            
        },


        async deleteSample(id) {
            const response = await fetch(`/api/samples/${id}`, {
                method: 'DELETE'
            });
            if (response.ok) {
                this.fetchData(); // Refresh data after deletion
            }
            if (!response.ok) {
                console.error("Failed to fetch samples:", response.statusText);
                return;
            }
            
        },

        cancelEdit() {
            this.data.isEditing = false; // Exit editing mode
            this.data.selectedSample = null; // Clear selected sample
        },

        getSideEffects() {
            const highestContaminant = this.data.highestLowest.highest.name;
            this.data.sideEffects = this.sideEffectsData[highestContaminant];
        },
        sideEffectsData: {
                aluminium: {
                    sideEffects: "Excessive aluminium can cause skin irritation and has been linked to neurological issues.",
                    remedy: "Reverse osmosis, coagulation, and sedimentation."
                },
                ammonia: {
                    sideEffects: "High levels of ammonia may irritate the skin, eyes, throat, and cause respiratory problems.",
                    remedy: "Chlorination, aeration, and biofiltration."

                },
                arsenic: {
                    sideEffects: "Chronic exposure to arsenic can lead to cancer, skin lesions, cardiovascular diseases, and diabetes.",
                    remedy: "Filtration, reverse osmosis, and ion exchange."
                },
                barium: {
                    sideEffects: "Exposure to barium in high concentrations can cause muscle weakness, changes in heart rhythm, and gastrointestinal problems.",
                    remedy: "Ion exchange and reverse osmosis."

                },
                cadmium: {
                    sideEffects: "Cadmium exposure can lead to kidney damage, bone fragility, and respiratory issues.",
                    remedy: "Ion exchange, reverse osmosis, and chemical precipitation."

                },
                chloramine: {
                    sideEffects: "Chloramine can cause skin, eye, and respiratory irritation, especially in sensitive individuals.",
                    remedy: "Activated carbon filtration and UV disinfection."

                },
                chromium: {
                    sideEffects: "Hexavalent chromium exposure can lead to lung cancer, respiratory issues, and skin ulcers.",
                    remedy: "Chemical precipitation, ion exchange, and reverse osmosis."

                },
                copper: {
                    sideEffects: "Excessive copper intake can cause stomach pain, nausea, vomiting, and, in severe cases, liver or kidney damage.",
                    remedy: "Corrosion control, filtration, and reverse osmosis."

                },
                fluoride: {
                    sideEffects: "Overexposure to fluoride can lead to dental fluorosis in children and skeletal fluorosis in adults.",
                    remedy: "Activated alumina and reverse osmosis."

                },
                bacteria: {
                    sideEffects: "Harmful bacteria in water can cause gastrointestinal issues, infections, and severe illness, particularly in immunocompromised individuals.",
                    remedy: "Boiling, UV treatment, and chlorination."

                },
                viruses: {
                    sideEffects: "Harmful bacteria in water can cause gastrointestinal issues, infections, and severe illness, particularly in immunocompromised individuals.",
                    remedy: "Boiling, UV treatment, and chlorination."

                },
                lead: {
                    sideEffects: "Lead poisoning can cause developmental delays in children, kidney damage, and high blood pressure in adults.",
                    remedy: "Pipe replacement, water filters, and corrosion control."
                },
                nitrates: {
                    sideEffects: "High nitrate levels can cause methemoglobinemia, or blue baby syndrome, which affects oxygen levels in the blood.",
                    remedy: "Ion exchange and reverse osmosis."

                },
                nitrites: {
                    sideEffects: "Similar to nitrates, nitrites can cause oxygen deprivation in the blood, leading to serious health issues.",
                    remedy: "Ion exchange and reverse osmosis."

                },
                mercury: {
                    sideEffects: "Mercury exposure can result in neurological damage, memory loss, and motor dysfunction.",
                    remedy: "Chemical precipitation, filtration, and reverse osmosis."

                },
                perchlorate: {
                    sideEffects: "Perchlorate can interfere with thyroid function, leading to hormonal imbalances and developmental issues in children.",
                    remedy: "Ion exchange and reverse osmosis."

                },
                radium: {
                    sideEffects: "Radium exposure increases the risk of bone cancer and other cancers due to its radioactive properties.",
                    remedy: "Ion exchange and reverse osmosis."

                },
                selenium: {
                    sideEffects: "Too much selenium can cause nausea, diarrhea, skin rashes, and neurological symptoms.",
                    remedy: "Ion exchange and filtration."

                },
                silver: {
                    sideEffects: "Excessive silver intake can lead to a condition called argyria, where the skin turns blue-gray due to silver buildup in tissues.",
                    remedy: "Filtration and ion exchange."

                }, uranium: {
                    sideEffects: "Can cause neurological issues, bone disease, and can affect the kidneys.",
                    remedy: "Reverse osmosis and ion exchange."

                }
            },
        }

    };
}


